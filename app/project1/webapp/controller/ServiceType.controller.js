sap.ui.define([
    "sap/ui/core/mvc/Controller",
    "sap/m/MessageBox",
    "sap/m/Dialog",
    "sap/m/Input",
    "sap/m/Button",
    "sap/m/Label",
    "sap/m/VBox",
    "sap/ui/model/odata/v4/ODataModel"

], function (Controller, MessageBox, Dialog, Input, Button, Label, VBox) {
    "use strict";

    return Controller.extend("project1.controller.ServiceType", {
        onInit: function () {
            // Fetch data from CAP OData service
            var oModel = new sap.ui.model.json.JSONModel({
                ServiceTypes: [],
                newCode: "",
                newDescription: ""
            });
            this.getView().setModel(oModel, "view");
            fetch("/odata/v4/sales-cloud/ServiceTypes")
                .then(response => response.json())
                .then(data => {
                    // Wrap array inside an object for binding
                    oModel.setData({ ServiceTypes: data.value });
                    this.getView().byId("serviceTable").setModel(oModel);
                })
                .catch(err => {
                    console.error("Error fetching ServiceTypes", err);
                });


        },

        onAdd: function () {
            var oModel = this.getView().getModel();
            var newCode = oModel.getProperty("/newCode");
            var newDescription = oModel.getProperty("/newDescription");

            if (newCode && newDescription) {
                var newServiceType = {
                    serviceId: newCode,            // CAP expects this
                    description: newDescription    // CAP expects this
                    // serviceTypeCode (UUID) is auto-generated by CAP
                    // lastChangeDate will be handled by CAP if you use managed
                };

                fetch("/odata/v4/sales-cloud/ServiceTypes", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(newServiceType)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Failed to save: " + response.statusText);
                        }
                        return response.json();
                    })
                    .then(savedItem => {
                        var aServiceTypes = oModel.getProperty("/ServiceTypes") || [];
                        aServiceTypes.push(savedItem);
                        oModel.setProperty("/ServiceTypes", aServiceTypes);

                        // Reset form
                        oModel.setProperty("/newCode", "");
                        oModel.setProperty("/newDescription", "");
                    })
                    .catch(err => {
                        console.error("Error saving ServiceType:", err);
                        sap.m.MessageBox.error("Error: " + err.message);
                    });
            } else {
                sap.m.MessageBox.warning("Please fill in Code and Description.");
            }
        }
        ,
        onEdit: function (oEvent) {
            // var oViewModel = this.getView().getModel("view");
            var oButton = oEvent.getSource();
            var oContext = oButton.getParent().getParent().getBindingContext(); // Navigate to ColumnListItem context

            if (!oContext) {
                MessageBox.warning("Error: Unable to retrieve row data");
                return;
            }

            var oSelectedData = oContext.getObject();
            var oModel = this.getView().getModel("view");

            // Create Edit Dialog if not exists
            if (!this._oEditDialog) {
                this._oEditDialog = new Dialog({
                    title: "Edit Service Type",
                    titleAlignment: "Center",
                    contentWidth: "600px",
                    content: new VBox({}),
                    beginButton: new Button({
                        text: "Save",
                        type: "Emphasized",
                        press: () => {
                            var aContent = this._oEditDialog.getContent()[0].getContent();

                            // Get updated values from inputs
                            var sNewCode = aContent[1].getValue();
                            var sNewDescription = aContent[3].getValue();

                            // Call CAP OData UPDATE (PATCH is recommended)
                            fetch(`/odata/v4/sales-cloud/ServiceTypes('${oSelectedData.serviceTypeCode}')`, {
                                method: "PATCH",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                body: JSON.stringify({
                                    serviceId: sNewCode,       // optional if Code is key, only update if editable
                                    description: sNewDescription
                                })
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error("Failed to update: " + response.statusText);
                                    }
                                    return response.json();
                                })
                                .then(updatedItem => {
                                    console.log(updatedItem);
                                    
                                    // Update local model so table refreshes
                                    var aServiceTypes = oModel.getProperty("/ServiceTypes") || [];
                                    //var aServiceTypes = oModel.getProperty("/ServiceTypes");
                                    var iIndex = aServiceTypes.findIndex(st => st.serviceId === oSelectedData.serviceId);
                                    if (iIndex > -1) {
                                        aServiceTypes[iIndex] = updatedItem;
                                        oModel.setProperty("/ServiceTypes", aServiceTypes);
                                    }

                                    sap.m.MessageToast.show("Service Type updated successfully!");
                                    this._oEditDialog.close();
                                })
                                .catch(err => {
                                    console.error("Error updating ServiceType:", err);
                                    sap.m.MessageBox.error("Error: " + err.message);
                                });
                        }

                    }),
                    endButton: new Button({
                        text: "Cancel",
                        press: () => this._oEditDialog.close()
                    })
                });
                this.getView().addDependent(this._oEditDialog);
            }
            // Fill dialog content with selected data
            this._oEditDialog.removeAllContent();
            this._oEditDialog.addContent(
                new sap.ui.layout.form.SimpleForm({
                    editable: true,
                    layout: "ResponsiveGridLayout",
                    content: [
                        new Label({ text: "Code", design: "Bold" }),
                        new Input({ value: oSelectedData.serviceId }),
                        new Label({ text: "Description", design: "Bold" }),
                        new Input({ value: oSelectedData.description })
                    ]
                })
            );
            this._oEditDialog.open();
        },

        onDelete: function (oEvent) {
            var oBindingContext = oEvent.getSource().getBindingContext();
            if (oBindingContext) {
                var sPath = oBindingContext.getPath();
                var oModel = this.getView().getModel("view");
                var oItem = oModel.getProperty(sPath);

                MessageBox.confirm("Are you sure you want to delete " + oItem.serviceId + "?", {
                    title: "Confirm Deletion",
                    onClose: function (oAction) {
                        if (oAction === MessageBox.Action.OK) {
                            // ðŸ”¥ Call CAP backend DELETE
                            fetch(`/odata/v4/sales-cloud/ServiceTypes('${oItem.serviceTypeCode}')`, {
                                method: "DELETE"
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error("Failed to delete: " + response.statusText);
                                    }

                                    // âœ… Update local JSONModel
                                    var aServiceTypes = oModel.getProperty("/ServiceTypes");
                                    var iIndex = aServiceTypes.findIndex(st => st.serviceId === oItem.serviceId);
                                    if (iIndex > -1) {
                                        aServiceTypes.splice(iIndex, 1);
                                        oModel.setProperty("/ServiceTypes", aServiceTypes);
                                    }

                                    sap.m.MessageToast.show("Service Type deleted successfully!");
                                })
                                .catch(err => {
                                    console.error("Error deleting ServiceType:", err);
                                    sap.m.MessageBox.error("Error: " + err.message);
                                });
                        }
                    }
                });
            }
        },

        onOpenAddServiceTypeDialog: function () {
            var oViewModel = this.getView().getModel("view"); // JSON model for inputs

            var oDialog = new Dialog({
                title: "Add New Service Type",
                content: new sap.ui.layout.form.SimpleForm({
                    editable: true,
                    layout: "ResponsiveGridLayout",
                    content: [
                        new Label({ text: "Code", design: "Bold" }),
                        new Input({ value: "{view>/newCode}", placeholder: "Enter Code" }),

                        new Label({ text: "Description", design: "Bold" }),
                        new Input({ value: "{view>/newDescription}", placeholder: "Enter Description" })
                    ]
                }),
                beginButton: new Button({
                    text: "Add",
                    press: function () {
                        var newCode = oViewModel.getProperty("/newCode");
                        var newDescription = oViewModel.getProperty("/newDescription");
                        console.log("Entered values:", newCode, newDescription);
                        if (newCode && newDescription) {
                            var newServiceType = {
                                serviceId: newCode,
                                description: newDescription
                            };

                            fetch("/odata/v4/sales-cloud/ServiceTypes", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                body: JSON.stringify(newServiceType)
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error("Failed to save: " + response.statusText);
                                    }
                                    return response.json();
                                })
                                .then(savedItem => {
                                    var aServiceTypes = oViewModel.getProperty("/ServiceTypes") || [];
                                    aServiceTypes.push(savedItem);
                                    oViewModel.setProperty("/ServiceTypes", aServiceTypes);

                                    // Reset form
                                    oViewModel.setProperty("/newCode", "");
                                    oViewModel.setProperty("/newDescription", "");
                                    sap.m.MessageToast.show("Service Type added successfully!");
                                    var oTable = this.byId("serviceTable");
                                    oTable.getBinding("items").refresh();


                                    oDialog.close();
                                })
                                .catch(err => {
                                    console.error("Error saving ServiceType:", err);
                                    sap.m.MessageBox.error("Error: " + err.message);
                                });
                        } else {
                            sap.m.MessageBox.warning("Please fill in Code and Description.");
                        }
                    }.bind(this)
                }),
                endButton: new Button({
                    text: "Cancel",
                    press: function () {
                        oViewModel.setProperty("/newCode", "");
                        oViewModel.setProperty("/newDescription", "");
                        oDialog.close();
                    }
                }),
                afterClose: function () {
                    oDialog.destroy();
                }
            });

            // ðŸ”‘ attach the "view" model to the dialog as well
            oDialog.setModel(oViewModel, "view");
            oDialog.open();
        }

    });
});
